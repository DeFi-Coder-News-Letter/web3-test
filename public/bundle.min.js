(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({"/Users/lentan/repo/torus/web3-test/src/main.js":[function(require,module,exports){
const web3 = new Web3(window.ethereum)
const UNLOCK_FIRST = 'please unlock first'
const okay = function() {
  alert('OK. Result: ' + JSON.stringify(arguments))
}
const fail = function() {
  alert('Fail. Error: ' + JSON.stringify(arguments))
}
document.getElementById('ethereum-enable')
.addEventListener('click', () => {
  window.ethereum.enable()
})
try {
  document.getElementById('web3-personalSign')
  .addEventListener('click', () => {
    web3.eth.getAccounts((err, accounts) => {
      if (err) throw err
      if (accounts.length === 0) throw new Error(UNLOCK_FIRST)
      web3.personal.sign('0x123456789', accounts[0], (err, res) => {
        if (err) throw err
        web3.personal.ecRecover('0x123456789', res, (err, res) => {
          if (err) throw err
          if (res !== accounts[0]) {
            throw new Error('could not retrieve same address from signature')
          } else {
            okay(`Retrieved address from signature - ${res}`)
          }
        })
      })
    })
  })
} catch (e) {
  fail(e)
}


},{}]},{},["/Users/lentan/repo/torus/web3-test/src/main.js"]);
